diff --git a/Formula/imagemagick.rb b/Formula/imagemagick.rb
index 4bd3df9..f57afbc 100644
--- a/Formula/imagemagick.rb
+++ b/Formula/imagemagick.rb
@@ -32,16 +32,55 @@ class Imagemagick < Formula
   uses_from_macos "libxml2"
   uses_from_macos "zlib"
 
-  on_linux do
-    depends_on "libx11"
-  end
+  depends_on "libx11"
+  depends_on "graphviz" => :optional
 
   skip_clean :la
 
+
+  # experimental patch, see details at the bottom of this file
+  patch :DATA
+
+  # Alternative to the patch. Adding these dependencies allows the project to
+  # build but the `display wizard` segfaults.
+  #
+  # depends_on "libxext"
+  # depends_on "libsm"
+  # depends_on "libxt"
+
+
   def install
     # Avoid references to shim
     inreplace Dir["**/*-config.in"], "@PKG_CONFIG@", Formula["pkg-config"].opt_bin/"pkg-config"
 
+
+    # Add a symlink that points to the X11 include files provided by XQuartz.
+    # This prevents the `display wizard` command from segfaulting.
+    ln_s "/opt/X11/include/X11", "#{buildpath}/X11"
+
+
+    # Adding -I/opt/X11/include and -L/opt/X11/lib via compiler flags is blocked
+    # by the HOMEBREW_CCCFG=Osa setting. (=sa works, maybe)
+    #
+    # See the following for details:
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/extend/ENV/super.rb#L83-L88
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/shims/super/cc#L36
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/shims/super/cc#L108
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/shims/super/cc#L140
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/shims/super/cc#L171       <-- refurbish_arg,
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/shims/super/cc#L252-L254      /opt/X11 is being filtered out
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/shims/super/cc#L270
+    #   https://github.com/Homebrew/brew/blob/master/Library/Homebrew/shims/super/cc#L357
+
+    # Consider appending /opt/X11/lib/pkgconfig to PKG_CONFIG_PATH and/or
+    # adding a symlink to /opt/X11/lib during build instead of depending on
+    # libx11/xorgproto.
+
+    # See also the "x11" method that was removed from brew recently:
+    # (Library/Homebrew/extend/os/mac/extend/ENV/std.rb)
+    # https://github.com/Homebrew/brew/commit/87dd13aea6691e9d5e0f3ba8d1d1f862a809212a#diff-ed4c0c77ea1a192666ae8a1758389fb65054649d71e0e39e14ee08e919fdb2b3L13-L34
+
+
     args = [
       "--enable-osx-universal-binary=no",
       "--prefix=#{prefix}",
@@ -51,7 +90,6 @@ class Imagemagick < Formula
       "--enable-shared",
       "--enable-static",
       "--with-freetype=yes",
-      "--with-gvc=no",
       "--with-modules",
       "--with-openjp2",
       "--with-openexr",
@@ -69,8 +107,6 @@ class Imagemagick < Formula
       "LDFLAGS=-lomp -lz",
     ]
 
-    args << "--without-x" if OS.mac?
-
     # versioned stuff in main tree is pointless for us
     inreplace "configure", "${PACKAGE_NAME}-${PACKAGE_BASE_VERSION}", "${PACKAGE_NAME}"
     system "./configure", *args
@@ -87,3 +123,62 @@ class Imagemagick < Formula
     assert_match "Helvetica", shell_output("#{bin}/identify -list font")
   end
 end
+
+
+# *EXPERIMENTAL PATCH*
+#
+# The ImageMagick configure script runs a number of compiler tests to check
+# for the existence of libraries such as libxext and libxt (-lXext -lXt).
+#
+# When the configure script is checking for XShmAttach in -lXext it does so
+# by testing that -lXext is present but without testing if
+# X11/extensions/XShm.h can be included.
+#
+# This check enables MAGICKCORE_HAVE_SHARED_MEMORY
+# This causes MagickCore/xwindow.c to include X11/extensions/XShm.h
+# This causes the `make install` step to fail
+#
+# As an experiment, the configure script is patched to test if
+# X11/extensions/XShm.h can be included.
+
+__END__
+diff --git a/configure b/configure
+index 662e288..4b4bc59 100755
+--- a/configure
++++ b/configure
+@@ -27835,6 +27835,8 @@ LIBS="-lICE $X_EXTRA_LIBS $LIBS"
+ cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+ /* end confdefs.h.  */
+
++#include <X11/ICE/ICElib.h>
++
+ /* Override any GCC internal prototype to avoid an error.
+    Use char because int might match the return type of a GCC
+    builtin and then its argument prototype would still apply.  */
+@@ -27931,6 +27933,8 @@ LIBS="-lXext  $LIBS"
+ cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+ /* end confdefs.h.  */
+ 
++#include <X11/extensions/XShm.h>
++
+ /* Override any GCC internal prototype to avoid an error.
+    Use char because int might match the return type of a GCC
+    builtin and then its argument prototype would still apply.  */
+@@ -27978,6 +27982,8 @@ LIBS="-lXext  $LIBS"
+ cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+ /* end confdefs.h.  */
+ 
++#include <X11/extensions/shape.h>
++
+ /* Override any GCC internal prototype to avoid an error.
+    Use char because int might match the return type of a GCC
+    builtin and then its argument prototype would still apply.  */
+@@ -28020,6 +28026,8 @@ LIBS="-lXt  $LIBS"
+ cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+ /* end confdefs.h.  */
+ 
++#include <X11/Intrinsic.h>
++
+ /* Override any GCC internal prototype to avoid an error.
+    Use char because int might match the return type of a GCC
+    builtin and then its argument prototype would still apply.  */
